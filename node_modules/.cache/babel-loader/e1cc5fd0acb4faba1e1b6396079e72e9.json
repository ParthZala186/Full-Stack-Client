{"ast":null,"code":"var _jsxFileName = \"/Users/imac07/Desktop/ReactMERN/client/src/pages/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport \"../App.css\";\nimport { AuthContext } from \"../helpers/AuthContex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState({});\n  let {\n    id\n  } = useParams();\n  const {\n    authState\n  } = useContext(AuthContext);\n  console.log(\"authState == \", authState);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []);\n\n  const addComment = () => {\n    axios.post(`http://localhost:3001/comments`, {\n      commentBody: newComment,\n      PostId: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log(response.data);\n        alert(response.data.error.message);\n      } else {\n        const commentToAdd = {\n          commentBody: newComment,\n          userName: response.data.userName\n        };\n        setComments([...comments, commentToAdd]);\n        setNewComment(\"\");\n      }\n    });\n  };\n\n  const deleteComment = id => {\n    axios.delete(`http://localhost:3001/comments/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem('accessToken')\n      }\n    }).then(() => {\n      setComments(comments.filter(val => {\n        return val.id != id;\n      }));\n    });\n  };\n\n  const deletePost = id => {\n    axios.delete(`http://localhost:3001/posts/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem('accessToken')\n      }\n    }).then(() => {\n      alert(\"delete success\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        id: \"individual\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: postObject.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: postObject.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [postObject.userName, authState.username === postObject.userName && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deletePost(postObject.id);\n            },\n            children: \"Delete Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Comment\",\n          autoComplete: \"off\",\n          onChange: e => {\n            setNewComment(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listOfComments\",\n          children: comments.map((comment, key) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title\",\n                children: [\" \", comment.commentBody, /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"UserName: \", comment.userName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this), authState.username === comment.userName && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteComment(comment.id),\n                  children: \" X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 45\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"hEJYIOAXBzyfgsCWuVq+HApg1gw=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/imac07/Desktop/ReactMERN/client/src/pages/Post.js"],"names":["React","useEffect","useState","useContext","useParams","axios","AuthContext","Post","postObject","setPostObject","comments","setComments","newComment","setNewComment","id","authState","console","log","get","then","response","data","addComment","post","commentBody","PostId","headers","accessToken","localStorage","getItem","error","alert","message","commentToAdd","userName","deleteComment","delete","filter","val","deletePost","title","postText","username","e","target","value","map","comment","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios';\nimport \"../App.css\";\nimport { AuthContext } from \"../helpers/AuthContex\"\nfunction Post() {\n    const [postObject, setPostObject] = useState({});\n    const [comments, setComments] = useState([])\n    const [newComment, setNewComment] = useState({})\n    let { id } = useParams();\n    const { authState } = useContext(AuthContext)\n    console.log(\"authState == \", authState)\n    useEffect(() => {\n        axios.get(`http://localhost:3001/posts/byId/${id}`).then((response) => {\n            setPostObject(response.data)\n        })\n\n        axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\n            setComments(response.data)\n        })\n    }, [])\n\n    const addComment = () => {\n        axios.post(`http://localhost:3001/comments`, { commentBody: newComment, PostId: id },\n            {\n                headers: {\n                    accessToken: localStorage.getItem(\"accessToken\")\n                },\n            }\n        ).then((response) => {\n            if (response.data.error) {\n                console.log(response.data)\n                alert(response.data.error.message)\n            } else {\n                const commentToAdd = { commentBody: newComment, userName: response.data.userName }\n                setComments([...comments, commentToAdd])\n                setNewComment(\"\")\n            }\n        })\n    }\n\n    const deleteComment = (id) => {\n        axios.delete(`http://localhost:3001/comments/${id}`, {\n            headers: {\n                accessToken: localStorage.getItem('accessToken')\n            }\n        }).then(() => {\n            setComments(comments.filter((val) => {\n                return val.id != id;\n            }))\n        })\n    }\n\n    const deletePost = (id) => {\n        axios.delete(`http://localhost:3001/posts/${id}`, {\n            headers: {\n                accessToken: localStorage.getItem('accessToken')\n            }\n        }).then(() => {\n            alert(\"delete success\")\n        })\n    }\n    return (\n        <div className=\"postPage\">\n            <div className=\"leftSide\">\n                <div className=\"post\" id=\"individual\">\n                    <div className=\"title\">{postObject.title}</div>\n                    <div className=\"body\">{postObject.postText}</div>\n                    <div className=\"footer\">\n                        {postObject.userName}\n                        {authState.username === postObject.userName && (\n                            <button onClick={() => { deletePost(postObject.id) }}>Delete Post</button>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <div className=\"rightSide\">\n                <div className=\"addCommentContainer\">\n                    <input type=\"text\" placeholder=\"Enter Comment\" autoComplete=\"off\" onChange={(e) => { setNewComment(e.target.value) }} />\n                    <button onClick={addComment}>Add Comment</button>\n                    <div className=\"listOfComments\">\n                        {comments.map((comment, key) => {\n                            return (\n                                <>\n                                    <div key={key} className=\"title\"> {comment.commentBody}\n                                        <label>UserName: {comment.userName}</label>\n                                        {authState.username === comment.userName &&\n                                            <button onClick={() => deleteComment(comment.id)}> X</button>\n                                        }\n                                    </div>\n\n                                </>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}