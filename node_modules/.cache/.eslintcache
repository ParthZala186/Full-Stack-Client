[{"/Users/imac07/Desktop/ReactMERN/client/src/index.js":"1","/Users/imac07/Desktop/ReactMERN/client/src/App.js":"2","/Users/imac07/Desktop/ReactMERN/client/src/reportWebVitals.js":"3","/Users/imac07/Desktop/ReactMERN/client/src/pages/Home.js":"4","/Users/imac07/Desktop/ReactMERN/client/src/pages/CreatePost.js":"5","/Users/imac07/Desktop/ReactMERN/client/src/pages/Post.js":"6","/Users/imac07/Desktop/ReactMERN/client/src/pages/Login.js":"7","/Users/imac07/Desktop/ReactMERN/client/src/pages/Registration.js":"8","/Users/imac07/Desktop/ReactMERN/client/src/helpers/AuthContex.js":"9","/Users/imac07/Desktop/ReactMERN/client/src/pages/PageNotFound.js":"10","/Users/imac07/Desktop/ReactMERN/client/src/pages/Profile.js":"11","/Users/imac07/Desktop/ReactMERN/client/src/pages/ChangePassword.js":"12"},{"size":477,"mtime":1622021906458,"results":"13","hashOfConfig":"14"},{"size":2801,"mtime":1622523497281,"results":"15","hashOfConfig":"14"},{"size":404,"mtime":1622021879917,"results":"16","hashOfConfig":"14"},{"size":3230,"mtime":1622466735964,"results":"17","hashOfConfig":"14"},{"size":2150,"mtime":1622461497274,"results":"18","hashOfConfig":"14"},{"size":5411,"mtime":1622522998063,"results":"19","hashOfConfig":"14"},{"size":1294,"mtime":1622440699155,"results":"20","hashOfConfig":"14"},{"size":1380,"mtime":1622283038905,"results":"21","hashOfConfig":"14"},{"size":84,"mtime":1622436930530,"results":"22","hashOfConfig":"14"},{"size":273,"mtime":1622457747929,"results":"23","hashOfConfig":"14"},{"size":2012,"mtime":1622523679780,"results":"24","hashOfConfig":"14"},{"size":1185,"mtime":1622524495745,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1k4iyyl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/imac07/Desktop/ReactMERN/client/src/index.js",[],["53","54"],"/Users/imac07/Desktop/ReactMERN/client/src/App.js",["55","56"],"/Users/imac07/Desktop/ReactMERN/client/src/reportWebVitals.js",[],"/Users/imac07/Desktop/ReactMERN/client/src/pages/Home.js",["57","58","59","60"],"import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useHistory, Link } from 'react-router-dom'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { AuthContext } from \"../helpers/AuthContex\"\nfunction Home() {\n    const [listOfPosts, setListOfPosts] = useState([]);\n    const [likedPosts, setLikedPosts] = useState([])\n    let history = useHistory()\n    const { authState } = useContext(AuthContext)\n    useEffect(() => {\n        if (!localStorage.getItem(\"accessToken\")) {\n            history.push(\"/login\")\n        } else {\n            axios.get(\"http://localhost:3001/posts\",\n                {\n                    headers: { accessToken: localStorage.getItem('accessToken') }\n                }).then((response) => {\n                    setListOfPosts(response.data.listOfPost)\n                    console.log(\"response.data.listOfPost == \", response.data.listOfPost)\n                    setLikedPosts(response.data.likedPost.map((like) => {\n                        return like.PostId;\n                    }))\n                })\n        }\n    }, [])\n\n\n    const likeAPost = (postId) => {\n        axios.post(\"http://localhost:3001/like\",\n            { PostId: postId },\n            { headers: { accessToken: localStorage.getItem('accessToken') } },\n\n        ).then((response) => {\n            //console.log(response)            \n            setListOfPosts(listOfPosts.map((post) => {\n                if (post.id === postId) {\n                    if (response.data.liked) {\n                        return { ...post, Likes: [...post.Likes, 0] }\n                    } else {\n                        const likeArray = post.Likes;\n                        likeArray.pop()\n                        return { ...post, Likes: likeArray }\n                    }\n                } else {\n                    return post;\n                }\n            }))\n            if (likedPosts.includes(postId)) {\n                setLikedPosts(likedPosts.filter((id) => {\n                    return id != postId\n                }))\n            } else {\n                setLikedPosts([...likedPosts, postId])\n            }\n\n        })\n    }\n    return (\n        <div>\n            {listOfPosts.map((value, key) => {\n                return (\n                    <div className=\"post\" >\n                        <div className=\"title\"> {value.title} </div>\n                        <div className=\"body\" onClick={() => { history.push(`/post/${value.id}`) }}> {value.postText} </div>\n                        <div className=\"footer\">\n                            <div className=\"username\"><Link to={`/profile/${value.UserId}`}>{value.userName}</Link></div>\n                            <div className=\"buttons\">\n                                <ThumbUpAltIcon className=\"likeBttn\" onClick={() => { likeAPost(value.id) }}\n                                    className={likedPosts.includes(value.id) ? \"unlikeBttn\" : \"likeBttn\"}\n                                />\n\n                                <label>{value.Likes.length}</label>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Home\n","/Users/imac07/Desktop/ReactMERN/client/src/pages/CreatePost.js",["61","62"],"import React, { useContext, useEffect } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport { useHistory } from 'react-router-dom'\nimport \"../App.css\";\nimport { AuthContext } from \"../helpers/AuthContex\"\nfunction CreatePost() {\n    const { authState } = useContext(AuthContext)\n    const initialValues = {\n        title: \"\",\n        postText: \"\",\n        //userName: \"\"\n    }\n\n    useEffect(() => {\n        if (!localStorage.getItem(\"accessToken\")) {\n            history.push(\"/login\")\n        }\n    }, [])\n\n    const validationSchema = Yup.object().shape({\n        title: Yup.string().required(\"Title must be required\"),\n        postText: Yup.string().required(),\n        //userName: Yup.string().min(3).max(15).required()\n    })\n\n    const onSubmit = (data) => {\n        axios.post(\"http://localhost:3001/posts\", data, {\n            headers: {\n                accessToken: localStorage.getItem(\"accessToken\")\n            },\n        }).then((response) => {\n            history.push(\"/\")\n        })\n    }\n\n    const history = useHistory();\n    return (\n        <div className=\"createPostPage\">\n            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\n\n                <Form className=\"formContainer\">\n                    <label>Title</label>\n                    <ErrorMessage name=\"title\" component=\"span\" />\n                    <Field autocomplete=\"off\" id=\"inputCreatePost\" name=\"title\" placeholder=\"Title\" />\n                    <label>Post</label>\n                    <ErrorMessage name=\"postText\" component=\"span\" />\n                    <Field autocomplete=\"off\" id=\"inputCreatePost\" name=\"postText\" placeholder=\"Post\" />\n                    {/* <label>User Name</label>\n                    <ErrorMessage name=\"userName\" component=\"span\" />\n                    <Field autocomplete=\"off\" id=\"inputCreatePost\" name=\"userName\" placeholder=\"User Name\" /> */}\n                    <button type=\"submit\">Create Post</button>\n                </Form>\n            </Formik>\n        </div>\n    )\n}\n\nexport default CreatePost\n","/Users/imac07/Desktop/ReactMERN/client/src/pages/Post.js",["63","64"],"/Users/imac07/Desktop/ReactMERN/client/src/pages/Login.js",[],"/Users/imac07/Desktop/ReactMERN/client/src/pages/Registration.js",[],"/Users/imac07/Desktop/ReactMERN/client/src/helpers/AuthContex.js",[],"/Users/imac07/Desktop/ReactMERN/client/src/pages/PageNotFound.js",[],"/Users/imac07/Desktop/ReactMERN/client/src/pages/Profile.js",["65"],"/Users/imac07/Desktop/ReactMERN/client/src/pages/ChangePassword.js",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":36,"column":6,"nodeType":"78","endLine":36,"endColumn":8,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"80","line":10,"column":13,"nodeType":"74","messageId":"75","endLine":10,"endColumn":22},{"ruleId":"76","severity":1,"message":"81","line":26,"column":8,"nodeType":"78","endLine":26,"endColumn":10,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":51,"column":31,"nodeType":"85","messageId":"86","endLine":51,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":70,"column":37,"nodeType":"89","messageId":"90","endLine":70,"endColumn":106},{"ruleId":"72","severity":1,"message":"80","line":9,"column":13,"nodeType":"74","messageId":"75","endLine":9,"endColumn":22},{"ruleId":"76","severity":1,"message":"81","line":20,"column":8,"nodeType":"78","endLine":20,"endColumn":10,"suggestions":"91"},{"ruleId":"76","severity":1,"message":"92","line":23,"column":8,"nodeType":"78","endLine":23,"endColumn":10,"suggestions":"93"},{"ruleId":"83","severity":1,"message":"84","line":51,"column":31,"nodeType":"85","messageId":"86","endLine":51,"endColumn":33},{"ruleId":"76","severity":1,"message":"92","line":23,"column":8,"nodeType":"78","endLine":23,"endColumn":10,"suggestions":"94"},{"ruleId":"72","severity":1,"message":"95","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":19},{"ruleId":"72","severity":1,"message":"96","line":7,"column":9,"nodeType":"74","messageId":"75","endLine":7,"endColumn":16},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.","ArrayExpression",["99"],"'authState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["100"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["101"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["102"],["103"],"'useParams' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"106","fix":"108"},{"desc":"109","fix":"110"},{"desc":"109","fix":"111"},"Update the dependencies array to be: [authState]",{"range":"112","text":"113"},"Update the dependencies array to be: [history]",{"range":"114","text":"115"},{"range":"116","text":"115"},"Update the dependencies array to be: [id]",{"range":"117","text":"118"},{"range":"119","text":"118"},[1140,1142],"[authState]",[1111,1113],"[history]",[584,586],[878,880],"[id]",[896,898]]